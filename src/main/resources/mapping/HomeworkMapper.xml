<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tedu.winter.mapper.HomeworkMapper" >
  <resultMap id="BaseResultMap" type="tedu.winter.model.Homework" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="techerid" property="techerid" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="teacher_name" property="teacherName" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="tedu.winter.model.Homework" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, score, techerid, create_time, update_time, teacher_name
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_homework
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_homework
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="tedu.winter.model.Homework" >
    insert into s_homework (id, title, score, 
      techerid, create_time, update_time, 
      teacher_name, content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
      #{techerid,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{teacherName,jdbcType=CHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tedu.winter.model.Homework" >
    insert into s_homework
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="techerid != null" >
        techerid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="techerid != null" >
        #{techerid,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=CHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tedu.winter.model.Homework" >
    update s_homework
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="techerid != null" >
        techerid = #{techerid,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=CHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="tedu.winter.model.Homework" >
    update s_homework
    set title = #{title,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      techerid = #{techerid,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      teacher_name = #{teacherName,jdbcType=CHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="tedu.winter.model.Homework" >
    update s_homework
    set title = #{title,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      techerid = #{techerid,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      teacher_name = #{teacherName,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAll" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_homework
      order by create_time DESC
  </select>
  <select id="selectByTeacherId" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from s_homework
    where techerid = #{techerid,jdbcType=CHAR}
    order by create_time DESC
  </select>
    <select id="selectByTeacherName" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from s_homework
        where teacher_name = #{teacherName,jdbcType=CHAR}
        order by create_time DESC
    </select>
</mapper>